# ============================================================================
# Docker Compose Environment Configuration
# Project: Local AI Platform (OpenWebUI, LiteLLM, Searxng, Ollama, n8n, Postgres, etc.)
# Author: Erik van Busschbach
# Last updated: 2025-08-11
# Version: 250811v4
# ============================================================================

# ---------- Service Ports (for env management) ----------
OPENWEBUI_PORT=3000                                             # Port OPENWEBUI frontend listens on
FLOWISE_PORT=3001                                               # Port FLOWISE listens on
REDIS_PORT=6379                                                 # Port REDIS cache/queue listens on
OLLAMA_PORT=11434                                               # Port OLLAMA local inference engine listens on
QDRANT_PORT=6333                                                # Port QDRANT vector database listens on
SEARXNG_PORT=7777                                               # Port SEARXNG meta search engine listens on
POSTGRES_PORT=5432                                              # Port POSTGRES listens on
LITELLM_PORT=4000                                               # Port LiteLLM listens on

# ---------- Global PostgreSQL Superuser (for container init, NOT used by apps) ----------
POSTGRES_HOST=postgres                                          # Host name used by containers to reach Postgres
POSTGRES_DB=postgres                                            # Default database for Postgres
POSTGRES_SUPERUSER=pgadmin                                      # Superuser for postgres container
POSTGRES_SUPERPASS=postgres-secure-pass-2025                    # Highly privileged password (not used by apps)

# ---------- Postgres Application database-list (comma separated) ----------
# This is used by the init script to create databases and users
# Format: app_name|db_name|db_user|db_password
# Example: app1|app1_db|app1_user|app1_secure_pass_2025
# Note: Ensure that the database names and users are unique across all applications
#       and that passwords are strong and secure.
#       The init script will create these databases and users with appropriate permissions.
APP_DATABASES=litellm|litellm_db|llm_user|llm_secure_pass_2025,n8n|n8n_db|n8n_user|n8n_secure_pass_2025


# ---------- LiteLLM Configuration ----------
LITELLM_MASTER_KEY=sk-update-this-now                    # Master API key for LiteLLM
LITELLM_SALT_KEY=sk-update-this-also                      # Salt key for password hashing
STORE_MODEL_IN_DB=true                                          # Whether to persist models in DB

# ---------- n8n Configuration ----------
N8N_ENCRYPTION_KEY=n8n-secure-encryption-key-2025               # Required! Secret for credential encryption (must be set)
N8N_USER_MANAGEMENT_JWT_SECRET=n8n-secure-jwt-secret-2025       # Required! For JWT in user management (do NOT share)
N8N_RUNNERS_ENABLED=true                                        # Enable workflow runners (for improved execution mode)
N8N_DIAGNOSTICS_ENABLED=false                                   # Disable sending telemetry data (privacy)
N8N_PERSONALIZATION_ENABLED=false                               # Disable AI-based/personalization features (privacy/default)