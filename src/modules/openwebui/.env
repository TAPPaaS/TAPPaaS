# ============================================================================
# Docker Compose Environment Configuration
# Project: Local AI Platform (OpenWebUI, LiteLLM, Searxng, Ollama, n8n, Postgres, etc.)
# Author: Erik van Busschbach
# Last updated: 2025-08-11
# Version: 250811v5-DRY
# Description:
#   - Single source of truth for all environment variables
#   - DRY: Derived vars (DB URLs, APP_DATABASES) are generated by load-env.sh
#   - Ensures all critical vars (DATABASE_URL, keys) are always set in containers
# ============================================================================

# ---------- Service Ports ----------
# Port the OpenWebUI frontend listens on
OPENWEBUI_PORT=3000
# Port Flowise listens on
FLOWISE_PORT=3001
# Port Redis cache/queue listens on
REDIS_PORT=6379
# Port Ollama local inference engine listens on
OLLAMA_PORT=11434
# Port Qdrant vector database listens on
QDRANT_PORT=6333
# Port SearxNG meta search engine listens on
SEARXNG_PORT=7777
# Port PostgreSQL listens on
POSTGRES_PORT=5432
# Port LiteLLM listens on
LITELLM_PORT=4000

# ---------- Global PostgreSQL Superuser ----------
# Hostname used by other containers to reach Postgres (service name in Compose)
POSTGRES_HOST=postgres
# Default database for Postgres superuser
POSTGRES_DB=postgres
# Superuser username for Postgres container
POSTGRES_SUPERUSER=pgadmin
# Alias for compatibility with tools expecting POSTGRES_USER
POSTGRES_USER=pgadmin
# Highly privileged password for superuser (never used by apps directly)
POSTGRES_SUPERPASS=postgres-secure-pass-2025

# ---------- LiteLLM Database Configuration ----------
# Name of the Postgres database used by LiteLLM
LITELLM_DB_NAME=litellm_db
# Username for LiteLLM's DB
LITELLM_DB_USER=llm_user
# Password for LiteLLM's DB user
LITELLM_DB_PASS=llm_secure_pass_2025

# ---------- LiteLLM Application Configuration ----------
# LiteLLM DB URL - LEAVE EMPTY (computed by load-env.sh for DRYness)
LITELLM_DATABASE_URL=
# Global database URL alias (also computed dynamically; for frameworks expecting DATABASE_URL)
DATABASE_URL=
# Master API key for LiteLLM (authenticates API requests)
LITELLM_MASTER_KEY=sk-update-this-now
# Salt key used to encrypt/decrypt stored credentials in DB (cannot change after first set)
LITELLM_SALT_KEY=sk-update-this-also
# Whether to persist model configs in the DB
STORE_MODEL_IN_DB=true
# Log level for LiteLLM (DEBUG/INFO/WARN)
LITELLM_LOG=DEBUG

# ---------- n8n Database Configuration ----------
# Name of the Postgres database used by n8n
N8N_DB_NAME=n8n_db
# Username for n8n's DB
N8N_DB_USER=n8n_user
# Password for n8n's DB user
N8N_DB_PASS=n8n_secure_pass_2025

# ---------- n8n Application Configuration ----------
# Encryption key for storing credentials securely (required)
N8N_ENCRYPTION_KEY=n8n-secure-encryption-key-2025
# Secret for JWT in n8n user management (required)
N8N_USER_MANAGEMENT_JWT_SECRET=n8n-secure-jwt-secret-2025
# Enable workflow runners for parallel execution
N8N_RUNNERS_ENABLED=true
# Disable telemetry
N8N_DIAGNOSTICS_ENABLED=false
# Disable personalization features
N8N_PERSONALIZATION_ENABLED=false

# ---------- Derived Composite Values ----------
# List of all app DB definitions in the format:
# appname|dbname|dbuser|dbpass,appname2|dbname2|dbuser2|dbpass2
# LEAVE EMPTY â€” load-env.sh generates this and persists it here before Compose up
APP_DATABASES=