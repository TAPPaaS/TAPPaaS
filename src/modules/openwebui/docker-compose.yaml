# ============================================================================
# Docker Compose Configuration
# Project: Local AI Platform (OpenWebUI, SearxNG, LiteLLM, Postgres, n8n, Ollama, etc.)
# Author: Erik van Busschbach
# Last updated: 2025-08-12
# Version: 250812v10-STABLE
# Description:
#   - DRY environment variable management
#   - Secure DB initialization
#   - Correct data volume mounts for Postgres & Redis
#   - Modular setup with health checks and explicit dependencies
#   - Cross-platform (macOS/Linux/WSL)
# ============================================================================

# version: "3.9"

networks:
  ai_network:

x-service-defaults: &defaults
  restart: unless-stopped
  networks:
    - ai_network
  env_file:
    - .env
  healthcheck:
    interval: 30s
    timeout: 10s
    retries: 3

services:

  open-webui:
    image: ghcr.io/open-webui/open-webui:latest
    environment:
      ENABLE_RAG_WEB_SEARCH: "true"
      RAG_WEB_SEARCH_ENGINE: searxng
      RAG_WEB_SEARCH_RESULT_COUNT: "3"
      SEARXNG_QUERY_URL: http://searxng:8080/search
    ports:
      - "${OPENWEBUI_PORT}:8080"
    volumes:
      - ./openwebui/admin_config:/app/config/admin:rw
      - ./openwebui/user_config:/app/config/user:rw
      - ./openwebui//app/backend:rw
      - ./openwebui/logs:/app/logs:rw
    depends_on:
      searxng:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:8080/health | jq -e '.status == true' || exit 1"]
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1.5g
          cpus: '0.50'
        reservations:
          memory: 1g
    <<: *defaults

  searxng:
    image: searxng/searxng:latest
    ports:
      - "${SEARXNG_PORT}:8080"
    environment:
      SEARXNG_BIND_ADDRESS: 0.0.0.0:8080
      SEARXNG_BASE_URL: "http://localhost:${SEARXNG_PORT}/"
      SEARXNG_LIMITER: "false"
    volumes:
      - ./searxng/admin_config:/etc/searxng:rw
      - ./searxng//var/lib/searxng:rw
      - ./searxng/logs:/var/log/searxng:rw
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8080 || exit 1"]
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.50'
        reservations:
          memory: 256m
    <<: *defaults

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_SUPERUSER}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERPASS}
      POSTGRES_DB: ${POSTGRES_DB}
      APP_DATABASES: ${APP_DATABASES}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgres/admin_scripts:/docker-entrypoint-initdb.d:rw
      - ./postgres//var/lib/postgresql/data
      - ./postgres/logs:/var/log/postgresql:rw
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "$$POSTGRES_SUPERUSER" -d "$$POSTGRES_DB"']
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 1.5g
          cpus: '0.50'
        reservations:
          memory: 1g
    <<: *defaults

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    ports:
      - "${LITELLM_PORT}:4000"
    environment:
      LITELLM_DATABASE_URL: ${LITELLM_DATABASE_URL}
    volumes:
      - ./litellm/admin_config:/app/config/admin:rw
      - ./litellm/user_config:/app/config/user:rw
      - ./litellm//app/rw
      - ./litellm/logs:/app/logs:rw
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O- http://localhost:4000/health/readiness | grep '\"status\":\"connected\"' || exit 1"]
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '0.50'
        reservations:
          memory: 1.5g
    <<: *defaults

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./redis//data
      - ./redis/logs:/var/log/redis:rw
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.50'
        reservations:
          memory: 256m
    <<: *defaults